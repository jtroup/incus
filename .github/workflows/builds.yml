name: Builds
on:
  push:

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-incus:
    name: Build Incus
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          - debian-11
          - debian-12
        arch:
          - amd64
          - arm64
        exclude:
          - os: debian-11
            arch: arm64
    runs-on:
      - self-hosted
      - cpu-4
      - mem-4G
      - disk-50G
      - arch-${{ matrix.arch }}
      - image-${{ matrix.os }}

    env:
      OS_ARCH: ${{ matrix.arch }}
      HOME: "/root/"
      PKG_CONFIG_PATH: "/opt/incus/lib/pkgconfig/"
      CGO_LDFLAGS: "-L/opt/incus/lib/"
      CGO_CFLAGS: "-I/opt/incus/include/"
      LD_LIBRARY_PATH: "/opt/incus/lib/"
      CPATH: "/opt/incus/include/"
      PATH: "/opt/incus/bin:/root/.cargo/bin:/usr/local/go/bin:/usr/local/node/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
      LXC_TAG: "v6.0.1"
      LXCFS_TAG: "v6.0.1"
      INCUS_TAG: "v6.0.1"
      INCUS_UI_CANONICAL_TAG: "0.8.1"
      RAFT_TAG: "v0.22.1"
      COWSQL_TAG: "v1.15.6"
      CRIU_TAG: "v3.19"
      EDK2_TAG: "edk2-stable202402"
      GOLANG_TAG: "go1.21.12"
      LIBTPMS_TAG: "v0.9.6"
      LIBURING_TAG: "liburing-2.6"
      MINIO_TAG: "RELEASE.2024-07-10T18-41-49Z"
      MINIO_MC_TAG: "RELEASE.2024-07-08T20-59-24Z"
      NASM_TAG: "nasm-2.16.03"
      NVIDIA_CONTAINER_TAG: "v1.15.0"
      QEMU_TAG: "v9.0.1"
      SEABIOS_TAG: "rel-1.16.3"
      SWTPM_TAG: "v0.9.0"
      VIRTIOFSD_TAG: "v1.11.0"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global --add advice.detachedHead false
          git config --global user.email "noreply@zabbly.com"
          git config --global user.name "Zabbly Incus build"

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install --no-install-recommends --yes \
            acpica-tools \
            asciidoc \
            autoconf \
            automake \
            bison \
            bmake \
            build-essential \
            curl \
            debhelper \
            devscripts \
            dosfstools \
            expect \
            flex \
            gawk \
            gettext \
            git \
            iproute2 \
            libacl1-dev \
            libaio-dev \
            libapparmor-dev \
            libcap-dev \
            libcap-ng-dev \
            libdbus-1-dev \
            libelf-dev \
            libfuse3-dev \
            libglib2.0-dev \
            libgnutls28-dev \
            libjson-glib-dev \
            libnet1-dev \
            libnl-3-dev \
            libnuma-dev \
            libpam0g-dev \
            libpixman-1-dev \
            libprotobuf-c-dev \
            libprotobuf-dev \
            librbd-dev \
            libseccomp-dev \
            libselinux1-dev \
            libspice-server-dev \
            libsqlite3-dev \
            libssl-dev \
            libtirpc-dev \
            libtool \
            libudev-dev \
            libusb-1.0-0-dev \
            libusbredirhost-dev \
            libuv1-dev \
            lsb-release \
            mtools \
            ninja-build \
            pkg-config \
            protobuf-c-compiler \
            protobuf-compiler \
            python3-cryptography \
            python3-jinja2 \
            python3-pexpect \
            python3-pip \
            python3-setuptools \
            python3-venv \
            rsync \
            socat \
            uuid-dev \
            xmlto \
            xorriso

          pip3 install meson || pip3 install meson --break-system-packages

      - name: Install backported debhelper (on focal)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          if [ "${OS_ARCH}" = "amd64" ]; then
              echo "deb http://archive.ubuntu.com/ubuntu focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
          else
              echo "deb http://ports.ubuntu.com/ubuntu-ports focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
          fi
          apt-get install -t focal-backports debhelper --yes

      - name: Install backported git (on focal)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          apt-get install software-properties-common --yes
          add-apt-repository ppa:git-core/ppa --yes
          apt-get install git --yes

      - name: Install Go
        run: |
          curl -sL "https://go.dev/dl/${GOLANG_TAG}.linux-${OS_ARCH}.tar.gz" | tar -C /usr/local/ -zx
          go version

      - name: Install Rust
        run: |
          curl -sL https://sh.rustup.rs -o install-rust.sh
          bash install-rust.sh -y

      - name: Install Node
        run: |
          [ "${OS_ARCH}" = "amd64" ] && NODE_ARCH=x64
          [ "${OS_ARCH}" = "arm64" ] && NODE_ARCH=arm64


          mkdir /usr/local/node/
          curl -sL "https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-${NODE_ARCH}.tar.xz" | tar -C /usr/local/node/ -Jx --strip-components=1

      - name: Build environment
        run: |
          mkdir /build/
          mkdir -p \
            /opt/incus/bin/ \
            /opt/incus/include/ \
            /opt/incus/lib/ \
            /opt/incus/lib/systemd/system/ \
            /opt/incus/share/

      - name: Get the code
        run: |
          git clone https://github.com/axboe/liburing /build/liburing --depth 1 -b "${LIBURING_TAG}"
          git clone https://github.com/cowsql/raft /build/raft --depth 1 -b "${RAFT_TAG}"
          git clone https://github.com/cowsql/cowsql /build/cowsql --depth 1 -b "${COWSQL_TAG}"
          git clone https://github.com/lxc/lxc /build/lxc --depth 1 -b "${LXC_TAG}"
          git clone https://github.com/lxc/lxcfs /build/lxcfs --depth 1 -b "${LXCFS_TAG}"
          git clone https://github.com/lxc/incus /build/incus -b "${INCUS_TAG}"

          git clone https://github.com/checkpoint-restore/criu /build/criu --depth 1 -b "${CRIU_TAG}"
          git clone https://github.com/NVIDIA/libnvidia-container /build/libnvidia-container --depth 1 -b "${NVIDIA_CONTAINER_TAG}"
          git clone https://github.com/minio/minio /build/minio --depth 1 -b "${MINIO_TAG}"
          git clone https://github.com/minio/mc /build/mc --depth 1 -b "${MINIO_MC_TAG}"

          git clone https://gitlab.com/qemu-project/seabios /build/seabios --depth 1 -b "${SEABIOS_TAG}"
          git clone https://github.com/tianocore/edk2 /build/edk2 --recurse-submodules --shallow-submodules --depth 1 -b "${EDK2_TAG}"
          git clone https://github.com/stefanberger/libtpms /build/libtpms --depth 1 -b "${LIBTPMS_TAG}"
          git clone https://github.com/stefanberger/swtpm /build/swtpm --depth 1 -b "${SWTPM_TAG}"
          git clone https://gitlab.com/virtio-fs/virtiofsd /build/virtiofsd --depth 1 -b "${VIRTIOFSD_TAG}"
          git clone https://gitlab.com/qemu-project/qemu /build/qemu --depth 1 -b "${QEMU_TAG}"

          git clone https://github.com/canonical/lxd-ui /build/incus-ui-canonical --depth 1 -b "${INCUS_UI_CANONICAL_TAG}"

          mkdir /build/nasm/
          curl -sL "https://www.nasm.us/pub/nasm/releasebuilds/$(echo ${NASM_TAG} | cut -d- -f2)/${NASM_TAG}.tar.gz" | tar -C /build/nasm/ -zx --strip-components=1

      - name: Build liburing
        run: |
          cd /build/liburing
          ./configure --prefix=/opt/incus
          make

          mkdir -p /build/target/liburing/
          DESTDIR=/build/target/liburing make install
          rsync -a /build/target/liburing/opt/incus/include/* /opt/incus/include/
          rsync -a /build/target/liburing/opt/incus/lib/* /opt/incus/lib/

      - name: Build raft
        run: |
          cd /build/raft
          autoreconf -i
          ./configure --prefix=/opt/incus
          make

          mkdir -p /build/target/raft/
          DESTDIR=/build/target/raft/ make install
          rsync -a /build/target/raft/opt/incus/include/ /opt/incus/include/
          rsync -a /build/target/raft/opt/incus/lib/ /opt/incus/lib/

      - name: Build cowsql
        run: |
          cd /build/cowsql
          autoreconf -i
          ./configure --prefix=/opt/incus
          make

          mkdir -p /build/target/cowsql/
          DESTDIR=/build/target/cowsql/ make install
          rsync -a /build/target/cowsql/opt/incus/include/ /opt/incus/include/
          rsync -a /build/target/cowsql/opt/incus/lib/ /opt/incus/lib/

      - name: Build LXC
        run: |
          cd /build/lxc
          meson setup build \
                  --prefix=/opt/incus \
                  --libdir=/opt/incus/lib \
                  -Dexamples=false \
                  -Dman=false \
                  -Dtools=false \
                  -Dtests=false \
                  -Dmemfd-rexec=false \
                  -Dapparmor=true \
                  -Dseccomp=true \
                  -Dselinux=true \
                  -Dcapabilities=true \
                  -Dio-uring-event-loop=false
          meson compile -C build

          mkdir -p /build/target/lxc/
          DESTDIR=/build/target/lxc/ meson install -C build
          rsync -a /build/target/lxc/opt/incus/include/ /opt/incus/include/
          rsync -a /build/target/lxc/opt/incus/lib/ /opt/incus/lib/
          mkdir -p /opt/incus/share/lxc/config/common.conf.d/
          mkdir -p /opt/incus/share/lxc/hooks/
          cp /build/target/lxc/opt/incus/share/lxc/hooks/nvidia /opt/incus/share/lxc/hooks/

      - name: Build LXCFS
        run: |
          REPO="${PWD}"

          cd /build/lxcfs
          meson setup build \
                  --prefix=/opt/incus \
                  --libdir=/opt/incus/lib \
                  -Ddocs=false \
                  -Dtests=false
          meson compile -C build

          mkdir -p /build/target/lxcfs/
          DESTDIR=/build/target/lxcfs/ meson install -C build
          rsync -a /build/target/lxcfs/opt/incus/bin/ /opt/incus/bin/
          rsync -a /build/target/lxcfs/opt/incus/share/ /opt/incus/share/
          rsync -a /build/target/lxcfs/opt/incus/lib/ /opt/incus/lib/

          sed -i "s#/var/lib/lxcfs#/var/lib/incus-lxcfs#g" /opt/incus/share/lxcfs/lxc.mount.hook
          patch -p1 /opt/incus/share/lxcfs/lxc.mount.hook < "${REPO}/patches/lxcfs-0001-hook.patch"

      - name: Build Incus
        run: |
          REPO="${PWD}"

          cd /build/incus

          git cherry-pick 3512d3770529c4b8f201d715b5111d37783058f7  # incusd/network/ovn: Port CreateLogicalRouterRoute to libovsdb
          git cherry-pick 9f57273a6a22cf4b3ce0a2c0cf8f365acfd27290  # incusd/network/ovn: Port DeleteLogicalRouterRoute to libovsdb
          git cherry-pick 46b9df75921cb83748b98903debe2a1fcdc7553c  # incusd/network: Update for OVN function changes
          git cherry-pick e99292988883f0936677760d61dde10aeee772b1  # incusd/network/ovn: Port DeleteLogicalRouterPort to libovsdb
          git cherry-pick 4c03093e8fea6db4a457f76a6a10e9a7e18369fe  # incusd/network/ovn: Remove LogicalRouterPortDeleteIPv6Advertisements
          git cherry-pick c5dc10b04c02f6c5af50f0b83dbd138669095988  # incusd/network: Update for OVN function changes
          git cherry-pick 7145515b9029a82f9991bc1c5874ca3294e62890  # incusd/network/ovn: Port DeleteLogicalSwitch to libovsdb
          git cherry-pick b44fc09354356720b7bb674af231a75923840b73  # incusd/network: Update for OVN function changes
          git cherry-pick 03f563b9c9b1dbfa64beb4f4221f405db46bbd67  # incusd/network/ovn: Remove logicalSwitchFindAssociatedPortGroups
          git cherry-pick a5cba6a6ec5d2c8bfdfd0a8a51e850f7ac3ef490  # incusd/network/ovn: Special handling for Load Balancer table
          git cherry-pick 3ff7d11fa77161e84179b63689f384047b1caa92  # incusd/network/ovn: Align functions context handling
          git cherry-pick 6c2d981e2b260ab5d548c48748b07da98062bc4c  # incusd/network/ovn: Port DeleteLogicalSwitchDHCPOption to libovsdb
          git cherry-pick 550851bf4a12df05da5963fdb113ba7873df854f  # incusd/network/ovn: Port GetLogicalSwitchPortLocation to libovsdb
          git cherry-pick d37e47ae3cba8458629e8eaa33ba90f5219e813c  # incusd/network/ovn: Port GetLogicalSwitchPortUUID to libovsdb
          git cherry-pick 8f9cdbc2f4e0e0c4eadf1228b540f3b9614422d3  # incusd/network/ovn: Port GetLogicalRouterPortHardwareAddress to libovsdb
          git cherry-pick 0e625d43d93bf33542a7467e4492583d100cec12  # incusd/network/ovn: Add GetLogicalRouter
          git cherry-pick 743a85bcfccde4559844171485bda649de0ca137  # incusd/network/ovn: Port DeleteLoadBalancer to libovsdb
          git cherry-pick 4ad5982aceba9347725b3a62a744f839c3d6cc02  # incusd/network/acl: Update for OVN function changes
          git cherry-pick ab0e1924dbf4c968a19d134070777fc6561e19c0  # incusd/network: Update for OVN function changes
          git cherry-pick a5f28375e5843b95e420e188389d7a13dc5c571c  # incusd/network: Simplify OVN network deletion logic
          git cherry-pick 77c4e09836700146a13417b3dceff2a282d9bfe5  # incusd/network/ovn: Port UpdateLogicalSwitchIPAllocation to libovsdb
          git cherry-pick 8519da027c2cc6275e1fbfa1c24cbde3f0ab3d6d  # incusd/network/ovn: Port UpdateLogicalSwitchDHCPv4Revervations to libovsdb
          git cherry-pick 2947b57c2465db2d31ac92701291cbd76f161b81  # incusd/network/ovn: Port GetLogicalSwitchDHCPv4Revervations to libovsdb
          git cherry-pick 696256fd434a35a5311a6dedaf7c905d32d7b6cf  # incusd/network/ovn: Port GetLogicalSwitchDHCPOptions to libovsdb
          git cherry-pick 0a945cbaceb34e68d9b6b3ccaf73e373f8515549  # incusd/network/ovn: Port UpdateLogicalSwitchDHCPv4Options to libovsdb
          git cherry-pick 45d289fb2536ec2b3f6f87754b87da095d050d19  # incusd/network/ovn: Port UpdateLogicalSwitchDHCPv6Options to libovsdb
          git cherry-pick 42261ff4859644df98333a83f8f8f8fcaa9c0ae4  # incusd/network: Update for OVN function changes
          git cherry-pick fc49c52b2ce3a79fe2c5329d972d0678b26841fb  # incusd/network/ovn: Port logicalSwitchPortACLRules to libovsdb
          git cherry-pick b40da9f5a9b79d69d2083b9466e94c5ec4db24d1  # incusd/network/ovn: Port GetLogicalSwitchPorts to libovsdb
          git cherry-pick fa1609ec2aee7925f2065a5b96cb1cbb01ad2c91  # incusd/network/ovn: Port UpdateLogicalSwitchPortOptions to libovsdb
          git cherry-pick dea679fe081668e1fd6b2a93482ec88beec587c5  # incusd/network/ovn: Port CreatePortGroup to libovsdb
          git cherry-pick 26f01d84290cf40fd1a847a9cc060749ef558671  # incusd/network: Update for OVN function changes
          git cherry-pick c8ba6cf5fcb39efea4c89ee3f332c5f2aaea69c8  # incusd/device/nic: Update for OVN function changes
          git cherry-pick 80f17907331ab853104201054fc8aa1f30c9a939  # incusd/network/acl: Update for OVN function changes
          git cherry-pick 48abc8a3b043278bbec5299e7d7a5ac515e0e780  # incusd/network/ovn: Port GetPortGroupsByProject to libovsdb
          git cherry-pick 04cc2a390591584729fc2feef423663713cc6739  # incusd/network/ovn: Port CreateAddressSet to libovsdb
          git cherry-pick 5c23be431ca74443dd4795594023263fcfa0a6d7  # incusd/network/ovn: Port UpdateAddressSetAdd to libovsdb
          git cherry-pick 762967eae8bd565daa76b1eef30788956668f99b  # incusd/network/ovn: Port UpdateAddressSetRemove to libovsdb
          git cherry-pick 0769b1525682797cdf7e4ed32d82e44a1d55f169  # incusd/network/ovn: Port DeleteAddressSet to libovsdb
          git cherry-pick 2d3ce78a042ceed365378a04a065942958f975b8  # incusd/network/acl: Update for OVN function changes
          git cherry-pick f825f08c42c83a24599bb85bbc0b161170b656f7  # incusd/network: Update for OVN function changes
          git cherry-pick f6696d88e1003c3c36ebf7683ada8674242846c0  # incusd/network/ovn: Port UpdateLogicalSwitchPortLinkRouter to libovsdb
          git cherry-pick de65389a8cf914a72dbdfde66dd32599fd483dbb  # incusd/network/ovn: Port UpdateLogicalSwitchPortLinkProviderNetwork to libovsdb
          git cherry-pick 1ebebf7356541125a614d6e3737490a4aa89a5ad  # incusd/network/ovn: Port GetLogicalSwitchIPs to libovsdb
          git cherry-pick fa5aed1a514801e2078d895316883b4b4ffbfc3a  # incusd/network/ovn: Port GetLogicalSwitchPortDNS to libovsdb
          git cherry-pick c40746092f08975cb2de1df03e9b45fe0aa28fa9  # incusd/network: Update for OVN function changes
          git cherry-pick 70246e7b92b9b73a3ec027d8b16157b1473c0537  # incusd/network/ovn: Port UpdateLogicalSwitchPortDNS to libovsdb
          git cherry-pick 2f9bbd24a8c367fad3598078810347a3d1bd02c9  # incusd/network/ovn: Port UpdatePortGroupMembers to libovsdb
          git cherry-pick 625d72cc41739696da1441b27a304cce6cb3c9b3  # incusd/network/ovn: Port UpdateLogicalRouterPolicy to libovsdb
          git cherry-pick 72d715002d5f947471d8c76da6e194f90e019c2a  # incusd/network: Update for OVN function changes
          git cherry-pick 9efde7ca08c9087a955c4b84b7d606bdacfc0d33  # incusd/network/ovn: Port CreateLoadBalancer to libovsdb
          git cherry-pick c00cfdaa4bd631b58f369270ac1381133d73ca7a  # incusd/network/ovn: Port GetLogicalRouterRoutes to libovsdb
          git cherry-pick 3e0b0f6320e780b41b10ac0ce651dae9273ce531  # incusd/network/ovn: Port DeleteLogicalRouterPeering to libovsdb
          git cherry-pick 99996103509bb557b21f968036b14dbe2c4903a9  # incusd/network: Update for OVN function changes
          git cherry-pick beb1d679f25671bf575e3d3a5bece1f72a560bd4  # incusd/network/ovn: Port CreateLogicalRouterPeering to libovsdb
          git cherry-pick 43c2ef0d582e9bd56ed7a03680f1ec76c4471449  # incusd/network: Update for OVN function changes
          git cherry-pick 08f6d56b59251ea3d1f8e71ae32c2ef49cc35234  # incusd/network/ovn: Port logicalSwitchPortDeleteDNSOperations to libovsdb
          git cherry-pick a2b90cd42561c3aaa501feb3eb87b2ebe35caddd  # incusd/network/ovn: Port DeleteLogicalSwitchPortDNS to libovsdb
          git cherry-pick 46ef843a412375fdb2486d63c276d5bd761e9aaa  # incusd/network/ovn: Port logicalSwitchPortDeleteOperations to libovsdb
          git cherry-pick 7395461cf1458f97eff8c8852b096627f5851ea7  # incusd/network/ovn: Port CleanupLogicalSwitchPort to libovsdb
          git cherry-pick 56773d9a8c568c134d32ac1a23897e5060ec2769  # incusd/network/ovn: Port aclRuleDeleteOperations to libovsdb
          git cherry-pick c37abeae6d0cf6efbc56fc5c06154d61263b5790  # incusd/network/ovn: Port aclRuleAddOperations to libovsdb
          git cherry-pick a8576e25fd633957e39c45ca0c5a0887af553636  # incusd/network/ovn: Port ClearPortGroupPortACLRules to libovsdb
          git cherry-pick b524c503331545d1ff9d67ae22d118a87b133d95  # incusd/network/ovn: Port UpdatePortGroupPortACLRules to libovsdb
          git cherry-pick 6eab8432aadac51a054a1c864d6e08021c0275f7  # incusd/network/ovn: Port UpdateLogicalSwitchACLRules to libovsdb
          git cherry-pick bab70830cd64e77d948d7cc048a88656c50f4622  # incusd/network/ovn: Port UpdatePortGroupACLRules to libovsdb
          git cherry-pick 20e552557e5bb5bbfc0c0c089e7c342c856421d5  # incusd/network/acl: Update for OVN function changes
          git cherry-pick 3219d15425fd1336ab880345bbdb559a8c181fd6  # incusd/network: Update for OVN function changes
          git cherry-pick c49100a279d969d29f6a8d19d5158d92a5633d46  # incusd/network/ovn: Remove nbctl
          git cherry-pick 2f8a458852ce60cb4beeea0c02ff3d621610740c  # incus/storage_volume: Tweak help messages
          git cherry-pick e770a71f77496e96b0315dc149c9ff20cab48259  # i18n: Update translation templates
          git cherry-pick ddba6bce28fa361327b3a4af294e82e6bcc21508  # incus/storage_volume: Fix lint
          git cherry-pick d90014dcc9b3804241b64add16365f137f240110  # doc/installing: Mention incus-tools package
          git cherry-pick 579ee11e8fb791e561338b8bc8b19c6680090557  # incusd/apparmor: Allow devpts mounts
          git cherry-pick db3931780d6406de5d6c1f500965a91bd4a618c0  # incusd: Improve profile rename errors
          git cherry-pick 47df62388b5a81f8bcb80fe6d7468647dbfd9b2f  # incus-user: Use shorter interrface name for long UIDs
          git cherry-pick cc38d4ff6ad28478ae4dfc25717050eda576b2f5  # incusd/device/network: Fix Tap interface MTU when in OVN
          git cherry-pick bde005e4f5db0e52b14b254ebeba14fbd20caef9  # incusd/isntance: Don't expose all internal flags in INFO message
          git cherry-pick c1f4f32d7131e60e3c810da36e80d9da4716766f  # incusd/storage/lvmcluster: Don't allow buckets
          git cherry-pick 3a0c698df5b9cac8caf417c070e43638a63cf5de  # incusd/storage/lvmcluster: Don't exclusively lock ISO volumes
          git cherry-pick 5941015bcd88986146e6e3535b940045992b9702  # incusd/device/disk: Allow attaching the same ISO to multiple instances
          git cherry-pick 15e6e522c764302ef6b46a36ba2bc047fa3c706e  # incusd/device/disk: Allow live-migration with agent/cloud-init disks
          git cherry-pick 95fb17cd3c1abffce0e8a89ae0048d2e9364cf9d  # incusd/instance/qemu: Fix live-migration with agent/cloud-init disks
          git cherry-pick f3caa114abdcbd60015dbb7329c3b6da9bd190a3  # incusd/device/disk: Don't crash on uninitialized pool
          git cherry-pick 664ce7cfce3fedc0a6cc00c3272639fd1e9b4892  # incusd/storage/lvmcluster: Always use shared access
          git cherry-pick b83b35399c089bffc91261eb43774eb44d9d6778  # incusd/instance/lxc: Don't report filesystem metrics when no per-instance value
          git cherry-pick 471c0de3b90f4afa8fed6cf1bb760f83eb539ea1  # incus/top: Set interval to 10s (minimum server-side is 8)
          git cherry-pick 2762921e22bcb2666498bcce30cf78568458ba8f  # incus/top: Hide zero values
          git cherry-pick 698aa57fd8996ff47b0d281024a9955c99449315  # incusd/device/disk: Mark virtual disks as always migratable
          git cherry-pick ca64aa1c64fe484488041874ef700d5a8aca8960  # tests: Update metrics test for recent change
          git cherry-pick e5179c23c8e6696832424a7d94a4f988b78592ba  # doc/storage_backup: Fix command example
          git cherry-pick c19644c610c0a451477bc7308b29ebd66a8a55d9  # incusd/apparmor/qemu: Relax apparmor rules a bit
          git cherry-pick d33cf8693dc7c6971760888986edad286cc9cb0a  # incusd/apparmor/qemu: Fix typo in rule
          git cherry-pick 7e437290c84b2d36b097433d9264ec59d43bc304  # incusd/apparmor/dnsmasq: Relax rules a bit
          git cherry-pick 2708c8bb843e04b3435c1da5ff469dbdcd06666c  # incusd/db/node: Fix version check in GetAPI
          git cherry-pick fa88a50fa3d12314254dba944f8851c234ac8acb  # incusd/db: Allow cluster startup with differing API extensions
          git cherry-pick db09e112b004c0a22b29279861b7cc86d5277bad  # incusd: Extend heartbeat data for minimum API extension count
          git cherry-pick d158502e5926865960425c68b0c6d23e3757fce8  # incusd/storage: Use writeback mode for qemu-img convert
          git cherry-pick b92fe219fa2823d59d272ac6c16ec6d1b5c2dc1b  # incusd/storage: Improve unpacking message
          git cherry-pick f0d2151c127d730874908ced5ae9eb6b7517d233  # incusd/operations: Handle percentage only updates
          git cherry-pick cbc101ac51a1eeb015c2564be6d237cee15d4c62  # incusd/storage: Pass through tracker to qemu-img
          git cherry-pick 869e33c6ccd978296517077bbd1d4eb5f92cec65  # [lxd-import] lxd/db/cluster: Rename "node" to "cluster member".
          git cherry-pick 62fc742993f905163036bd977b58ad4cec6025ba  # [lxd-import] lxd/db/cluster: Update error messages in unit tests.
          git cherry-pick 3a9756dc1628a01451f041fe09ea08dd479b96d1  # incusd/db/cluster: Update tests for relaxed API extensions checks
          git cherry-pick 9750da5d5fffad1a35a9aaac5d3e4839f9163a92  # incusd/apparmor: Implement progress tracker for qemu-img
          git cherry-pick 563e3f7fd47e019b3c3345749b0827ef0bb772be  # incusd/cgroup: Handle unknown devices in io.stat

          go build -o "/opt/incus/bin/fuidshift" github.com/lxc/incus/v6/cmd/fuidshift
          go build -o "/opt/incus/bin/incus" github.com/lxc/incus/v6/cmd/incus
          go build -o "/opt/incus/bin/incus-benchmark" github.com/lxc/incus/v6/cmd/incus-benchmark
          go build -o "/opt/incus/bin/incus-migrate" github.com/lxc/incus/v6/cmd/incus-migrate
          go build -o "/opt/incus/bin/incus-simplestreams" github.com/lxc/incus/v6/cmd/incus-simplestreams
          go build -o "/opt/incus/bin/incus-user" github.com/lxc/incus/v6/cmd/incus-user
          go build -o "/opt/incus/bin/incusd" -tags=libsqlite3 github.com/lxc/incus/v6/cmd/incusd
          go build -o "/opt/incus/bin/lxc-to-incus" github.com/lxc/incus/v6/cmd/lxc-to-incus
          go build -o "/opt/incus/bin/lxd-to-incus" -tags=libsqlite3 github.com/lxc/incus/v6/cmd/lxd-to-incus

          mkdir -p /opt/incus/agent
          if [ "$(uname -m)" = "x86_64" ]; then
              GOARCH=amd64 CGO_ENABLED=0 go build -o "/opt/incus/agent/incus-agent.linux.x86_64" -tags=agent,netgo github.com/lxc/incus/v6/cmd/incus-agent
              GOARCH=386 CGO_ENABLED=0 go build -o "/opt/incus/agent/incus-agent.linux.i686" -tags=agent,netgo github.com/lxc/incus/v6/cmd/incus-agent
          elif [ "$(uname -m)" = "aarch64" ]; then
              GOARCH=arm64 CGO_ENABLED=0 go build -o "/opt/incus/agent/incus-agent.linux.aarch64" -tags=agent,netgo github.com/lxc/incus/v6/cmd/incus-agent
          fi

          make build-mo
          mkdir -p /opt/incus/share/locale
          cp po/*.mo /opt/incus/share/locale/

          make doc
          cp -R doc/html /opt/incus/doc

          mkdir -p /opt/incus/share/bash_completion.d/
          /opt/incus/bin/incus completion bash > /opt/incus/share/bash_completion.d/incus

      - name: Build UI (canonical)
        run: |
          REPO="${PWD}"

          cd /build/incus-ui-canonical

          # Specific tweaking
          git am "${REPO}/patches/ui-canonical-0001-Branding.patch"
          git am "${REPO}/patches/ui-canonical-0002-Update-navigation.patch"
          git am "${REPO}/patches/ui-canonical-0003-Update-certificate-generation.patch"
          git am "${REPO}/patches/ui-canonical-0004-Remove-external-links.patch"
          git am "${REPO}/patches/ui-canonical-0005-Remove-Canonical-image-servers.patch"
          git am "${REPO}/patches/ui-canonical-0006-Remove-version-check.patch"
          git am "${REPO}/patches/ui-canonical-0007-Improve-openfga.patch"
          sed -i -f "${REPO}/patches/ui-canonical-renames.sed" src/*/*.ts* src/*/*/*.ts* src/*/*/*/*.ts* src/*/*/*/*/*.ts*

          npm install yarn --global
          yarn install
          yarn build

          mkdir -p /opt/incus/ui-canonical/
          rsync -a /build/incus-ui-canonical/build/ui/ /opt/incus/ui-canonical/

      - name: Build CRIU
        run: |
          cd /build/criu
          make WERROR=0
          cp criu/criu /opt/incus/bin/

      - name: Build libnvidia-container
        run: |
          REPO="${PWD}"

          cd /build/libnvidia-container
          patch -p1 < "${REPO}/patches/nvidia-0001-Fix-for-22.04-build.patch"
          patch -p1 < "${REPO}/patches/nvidia-0002-pre-load-libdl.patch"
          make prefix=/

          mkdir /build/target/libnvidia-container
          DESTDIR=/build/target/libnvidia-container make install prefix=/
          rsync -a /build/target/libnvidia-container/bin/ /opt/incus/bin/
          rsync -a /build/target/libnvidia-container/include/ /opt/incus/include/
          rsync -a /build/target/libnvidia-container/lib/ /opt/incus/lib/

      - name: Build minio
        run: |
          cd /build/minio
          make build
          cp minio /opt/incus/bin/

      - name: Build minio client
        run: |
          cd /build/mc
          make build
          cp mc /opt/incus/bin/

      - name: Build seabios
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          REPO="${PWD}"

          cd /build/seabios

          # Build a traditional seabios.
          make clean distclean
          echo "CONFIG_QEMU=y" >> .config
          echo "CONFIG_QEMU_HARDWARE=y" > .config
          echo "CONFIG_BOOTSPLASH=n" >> .config
          echo "CONFIG_ROM_SIZE=256" >> .config
          echo "CONFIG_XEN=n" >> .config
          echo "CONFIG_PVSCSI=n" >> .config
          echo "CONFIG_ESP_SCSI=n" >> .config
          echo "CONFIG_LSI_SCSI=n" >> .config
          echo "CONFIG_MEGASAS=n" >> .config
          echo "CONFIG_MPT_SCSI=n" >> .config
          echo "CONFIG_FLOPPY=n" >> .config
          echo "CONFIG_FLASH_FLOPPY=n" >> .config
          make oldnoconfig V=1
          make V=1 PYTHON=python3

          mkdir -p /opt/incus/share/qemu/
          cp out/bios.bin /opt/incus/share/qemu/seabios.bin

      - name: Build nasm
        run: |
          REPO="${PWD}"

          cd /build/nasm
          patch -p1 < "${REPO}/patches/nasm-0000-disable-manpages.patch"
          ./configure --prefix=/opt/incus
          make

          mkdir -p /build/target/nasm/
          DESTDIR=/build/target/nasm make install
          rsync -a /build/target/nasm/opt/incus/bin/ /opt/incus/bin/

      - name: Build EDK2
        run: |
          REPO="${PWD}"

          cd /build/edk2
          patch -p1 < "${REPO}/patches/edk2-0001-force-DUID-LLT.patch"
          cp "${REPO}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
          patch -p1 < "${REPO}/patches/edk2-0003-boot-delay.patch"
          patch -p1 < "${REPO}/patches/edk2-0004-gcc-errors.patch"
          patch -p1 < "${REPO}/patches/edk2-0005-Revert-ArmVirtPkg-make-EFI_LOADER_DATA-non-executabl.patch"
          patch -p1 < "${REPO}/patches/edk2-0006-disable-EFI-memory-attributes-protocol.patch"
          patch -p1 < "${REPO}/patches/edk2-0007-disable-UEFI-shell-under-SecureBoot.patch"

          EDK2_ARCH="X64"
          EDK2_PKG="OvmfPkg/OvmfPkgX64.dsc"
          EDK2_FV_CODE="OVMF_CODE"
          EDK2_FV_VARS="OVMF_VARS"
          if [ "$(uname -m)" = "aarch64" ]; then
              EDK2_ARCH="AARCH64"
              EDK2_PKG="ArmVirtPkg/ArmVirtQemu.dsc"
              EDK2_FV_CODE="QEMU_EFI"
              EDK2_FV_VARS="QEMU_VARS"
          fi

          build_edk2() {
              TARGET_CODE="$1"
              shift
              TARGET_VARS="$1"
              shift

              set -ex
              (
              cat << EOF
                  . ./edksetup.sh
                  make -C BaseTools ARCH=${EDK2_ARCH}
                  build -a ${EDK2_ARCH} -t GCC5 -b RELEASE -p ${EDK2_PKG} \
                    -DSMM_REQUIRE=FALSE \
                    -DSECURE_BOOT_ENABLE=TRUE \
                    -DNETWORK_IP4_ENABLE=TRUE \
                    -DNETWORK_IP6_ENABLE=TRUE \
                    -DNETWORK_TLS_ENABLE=TRUE \
                    -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
                    -DTPM2_ENABLE=TRUE \
                    -DTPM2_CONFIG_ENABLE=TRUE \
                    $@
          EOF
              ) | bash -e

              cp Build/*/*/FV/${EDK2_FV_CODE}.fd "${TARGET_CODE}"
              cp Build/*/*/FV/${EDK2_FV_VARS}.fd "${TARGET_VARS}"

              if [ "$(uname -m)" = "aarch64" ]; then
                  truncate -s 64m "${TARGET_CODE}"
                  truncate -s 64m "${TARGET_VARS}"
              fi
          }

          mkdir -p "/opt/incus/share/qemu/"
          build_edk2 \
            "/opt/incus/share/qemu/OVMF_CODE.4MB.fd" \
            "/opt/incus/share/qemu/OVMF_VARS.4MB.fd" \
            -DFD_SIZE_4MB

          ln -s OVMF_CODE.4MB.fd /opt/incus/share/qemu/OVMF_CODE.fd
          ln -s OVMF_VARS.4MB.fd /opt/incus/share/qemu/OVMF_VARS.fd

      - name: Build libtmps
        run: |
          cd /build/libtpms
          ./autogen.sh
          ./configure --prefix=/opt/incus --with-tpm2 --with-openssl
          make

          mkdir -p /build/target/libtpms/
          DESTDIR=/build/target/libtpms make install
          rsync -a /build/target/libtpms/opt/incus/include/ /opt/incus/include/
          rsync -a /build/target/libtpms/opt/incus/lib/ /opt/incus/lib/

      - name: Build swtpm
        run: |
          cd /build/swtpm
          ./autogen.sh
          ./configure --prefix=/opt/incus --with-seccomp --with-openssl --without-cuse
          make

          mkdir -p /build/target/swtpm/
          DESTDIR=/build/target/swtpm make install
          rsync -a /build/target/swtpm/opt/incus/bin/ /opt/incus/bin/
          rsync -a /build/target/swtpm/opt/incus/include/ /opt/incus/include/
          rsync -a /build/target/swtpm/opt/incus/lib/ /opt/incus/lib/

      - name: Build virtiofsd
        run: |
          cd /build/virtiofsd
          cargo build --release
          cp target/release/virtiofsd /opt/incus/bin/

      - name: Build QEMU
        run: |
          cd /build/qemu
          sed -i "s/^unset target_list$/target_list=\"$(uname -m)-softmmu\"/" configure
          sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure
          ./configure \
                  --prefix=/opt/incus \
                  --libexecdir=bin \
                  --libdir=lib \
                  --disable-bochs \
                  --disable-cloop \
                  --disable-dmg \
                  --disable-docs  \
                  --disable-guest-agent \
                  --disable-parallels \
                  --disable-qed \
                  --disable-slirp \
                  --disable-user \
                  --disable-vdi \
                  --disable-vnc \
                  --disable-xen \
                  --disable-install-blobs \
                  --enable-attr \
                  --enable-cap-ng \
                  --enable-kvm \
                  --enable-libusb \
                  --enable-usb-redir \
                  --enable-linux-aio \
                  --enable-linux-io-uring \
                  --enable-numa \
                  --enable-pie \
                  --enable-rbd \
                  --enable-seccomp \
                  --enable-spice \
                  --enable-system \
                  --enable-tcg \
                  --enable-tools \
                  --enable-vhost-crypto \
                  --enable-vhost-kernel \
                  --enable-vhost-net \
                  --enable-vhost-user \
                  --enable-virtfs
          make

          mkdir /build/target/qemu/
          DESTDIR=/build/target/qemu/ make install
          rsync -a /build/target/qemu/opt/incus/bin/ /opt/incus/bin/
          rsync -a /build/target/qemu/opt/incus/lib/ /opt/incus/lib/
          rsync -a /build/target/qemu/opt/incus/share/qemu/ /opt/incus/share/qemu/
          cp /build/qemu/pc-bios/kvmvapic.bin /opt/incus/share/qemu/
          cp /build/qemu/pc-bios/vgabios-qxl.bin /opt/incus/share/qemu/
          cp /build/qemu/pc-bios/vgabios-virtio.bin /opt/incus/share/qemu/
          cp /build/qemu/pc-bios/efi-virtio.rom /opt/incus/share/qemu/

      - name: Build Secure Boot firmware
        run: |
          REPO="${PWD}"

          cd /build/edk2

          FIRMWARE="OVMF"
          if [ "$(uname -m)" = "aarch64" ]; then
            FIRMWARE="AAVMF"
          fi

          cd "${REPO}/edk2-vars-generator"
          ./edk2-vars-generator -f "${FIRMWARE}" \
            -e /build/edk2/Build/*/*/*/EnrollDefaultKeys.efi \
            -s /build/edk2/Build/*/*/*/Shell.efi \
            -c "/opt/incus/share/qemu/OVMF_CODE.4MB.fd" \
            -V "/opt/incus/share/qemu/OVMF_VARS.4MB.fd" \
            -C "$(cat ${REPO}/zabbly-sb.oem.crt)" \
            -o "/opt/incus/share/qemu/OVMF_VARS.4MB.ms.fd"

      - name: Systemd units
        run: |
          cp systemd/*.service systemd/*.socket /opt/incus/lib/systemd/system/
          cp systemd/incusd /opt/incus/lib/systemd/
          cp systemd/incus-startup /opt/incus/lib/systemd/
          cp systemd/incus-user /opt/incus/lib/systemd/

      - name: Strip and cleanup binaries
        run: |
          rm -Rf /opt/incus/lib/debug/
          rm -Rf /opt/incus/include/
          rm -Rf /opt/incus/lib/pkgconfig/
          rm /opt/incus/lib/*.a /opt/incus/lib/*.la /opt/incus/lib/*/*.a /opt/incus/lib/*/*.la

          rm /opt/incus/bin/nasm
          rm /opt/incus/bin/ndisasm
          rm /opt/incus/bin/qemu-bridge-helper
          rm /opt/incus/bin/qemu-edid
          rm /opt/incus/bin/qemu-io
          rm /opt/incus/bin/qemu-nbd
          rm /opt/incus/bin/qemu-pr-helper
          rm /opt/incus/bin/qemu-storage-daemon
          rm /opt/incus/bin/swtpm_*
          rm /opt/incus/share/qemu/trace-events-all

          strip /opt/incus/bin/*
          strip /opt/incus/lib/*so*

      - name: Make a Debian package
        env:
          PKGOS: ${{ matrix.os }}
        run: |
          [ "${PKGOS}" = "debian-11" ] && CODENAME=bullseye
          [ "${PKGOS}" = "debian-12" ] && CODENAME=bookworm
          [ "${PKGOS}" = "ubuntu-20.04" ] && CODENAME=focal
          [ "${PKGOS}" = "ubuntu-22.04" ] && CODENAME=jammy
          [ "${PKGOS}" = "ubuntu-24.04" ] && CODENAME=noble

          mkdir -p pkg/ pkg/lib/systemd/ pkg/opt/ pkg/usr/bin/ pkg/usr/share/bash-completion/completions/

          cp -R debian pkg/debian
          cp bin/* pkg/usr/bin/
          cp -R /opt/incus pkg/opt/
          cp -R etc pkg/etc
          mv pkg/opt/incus/lib/systemd/system pkg/lib/systemd/system
          ln -s /opt/incus/share/bash_completion.d/incus pkg/usr/share/bash-completion/completions/incus

          ln -s /opt/incus/bin/lxd-to-incus pkg/usr/bin/lxd-to-incus

          ln -s /opt/incus/bin/fuidshift pkg/usr/bin/fuidshift
          ln -s /opt/incus/bin/incus-migrate pkg/usr/bin/incus-migrate
          ln -s /opt/incus/bin/incus-simplestreams pkg/usr/bin/incus-simplestreams

          mkdir -p pkg/var/lib/incus
          chmod 711 pkg/var/lib/incus

          mkdir -p pkg/var/log/incus
          chmod 700 pkg/var/log/incus

          mkdir -p pkg/usr/share/locale
          for i in /opt/incus/share/locale/*.mo; do
            LANG=$(echo $i | sed -e "s#.*/locale/##g" -e "s#.mo\$##g")
            mkdir -p pkg/usr/share/locale/${LANG}/LC_MESSAGES
            ln -s ${i} pkg/usr/share/locale/${LANG}/LC_MESSAGES/incus.mo
          done

          cd pkg
          dch --package incus --create -D ${CODENAME} -M -m "Automated Incus stable build" -v 1:$(echo ${INCUS_TAG} | sed -e "s/v//" -e "s/.0$//")-$(date -u +%Y%m%d%H%M)-$(echo ${PKGOS} | sed "s/-//g") --force-distribution
          dpkg-buildpackage -b

          cd ..
          mkdir out
          mv incus_* out/
          mv incus-base_* out/
          mv incus-client_* out/
          mv incus-extra_* out/
          mv incus-ui-canonical_* out/

      - name: Upload resulting build
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: out/*
