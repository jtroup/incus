From b765ee4d704ecf0968aa17e7e2344ff76454ef3f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Graber?= <stgraber@stgraber.org>
Date: Sun, 4 Aug 2024 05:28:49 +0000
Subject: [PATCH 16/17] Make migration an action
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: St√©phane Graber <stgraber@stgraber.org>
---
 src/api/instances.tsx                         |  6 ++--
 src/pages/instances/MigrateInstanceForm.tsx   | 13 ++++----
 .../actions/InstanceStateActions.tsx          | 23 +++++++++----
 .../instances/actions/MigrateInstanceBtn.tsx  | 33 ++++++++-----------
 .../instances/forms/EditInstanceDetails.tsx   | 13 --------
 src/util/instanceTable.tsx                    |  2 +-
 6 files changed, 41 insertions(+), 49 deletions(-)

diff --git a/src/api/instances.tsx b/src/api/instances.tsx
index 13cc0e4..a931b59 100644
--- a/src/api/instances.tsx
+++ b/src/api/instances.tsx
@@ -87,15 +87,15 @@ export const renameInstance = (
 };
 
 export const migrateInstance = (
-  name: string,
-  project: string,
+  instance: LxdInstance,
   target: string,
 ): Promise<LxdOperationResponse> => {
   return new Promise((resolve, reject) => {
-    fetch(`/1.0/instances/${name}?project=${project}&target=${target}`, {
+    fetch(`/1.0/instances/${instance.name}?project=${instance.project}&target=${target}`, {
       method: "POST",
       body: JSON.stringify({
         migration: true,
+        live: instance.type === "virtual-machine" && instance.status === "Running",
       }),
     })
       .then(handleResponse)
diff --git a/src/pages/instances/MigrateInstanceForm.tsx b/src/pages/instances/MigrateInstanceForm.tsx
index ff91c71..18d4262 100644
--- a/src/pages/instances/MigrateInstanceForm.tsx
+++ b/src/pages/instances/MigrateInstanceForm.tsx
@@ -1,4 +1,5 @@
 import { FC, KeyboardEvent } from "react";
+import { LxdInstance } from "types/instance";
 import {
   ActionButton,
   Button,
@@ -13,8 +14,7 @@ import { LxdClusterMember } from "types/cluster";
 interface Props {
   close: () => void;
   migrate: (target: string) => void;
-  instance: string;
-  location: string;
+  instance: LxdInstance;
   members: LxdClusterMember[];
 }
 
@@ -22,10 +22,9 @@ const MigrateInstanceForm: FC<Props> = ({
   close,
   migrate,
   instance,
-  location,
   members,
 }) => {
-  const memberNames = members.map((member) => member.server_name);
+  const memberNames = members.map((member) => member.server_name).sort();
 
   const MigrateSchema = Yup.object().shape({
     target: Yup.string().min(1, "This field is required"),
@@ -33,7 +32,7 @@ const MigrateInstanceForm: FC<Props> = ({
 
   const formik = useFormik({
     initialValues: {
-      target: memberNames.find((member) => member !== location) ?? "",
+      target: memberNames.find((member) => member !== instance.location) ?? "",
     },
     validationSchema: MigrateSchema,
     onSubmit: (values) => {
@@ -51,7 +50,7 @@ const MigrateInstanceForm: FC<Props> = ({
     <Modal
       close={close}
       className="migrate-instance-modal"
-      title={`Migrate instance ${instance}`}
+      title={`Migrate instance ${instance.name}`}
       buttonRow={
         <>
           <Button
@@ -85,7 +84,7 @@ const MigrateInstanceForm: FC<Props> = ({
             return {
               label: member,
               value: member,
-              disabled: member === location,
+              disabled: member === instance.location,
             };
           })}
         />
diff --git a/src/pages/instances/actions/InstanceStateActions.tsx b/src/pages/instances/actions/InstanceStateActions.tsx
index 86503b8..043177f 100644
--- a/src/pages/instances/actions/InstanceStateActions.tsx
+++ b/src/pages/instances/actions/InstanceStateActions.tsx
@@ -4,8 +4,11 @@ import StartInstanceBtn from "pages/instances/actions/StartInstanceBtn";
 import StopInstanceBtn from "pages/instances/actions/StopInstanceBtn";
 import FreezeInstanceBtn from "pages/instances/actions/FreezeInstanceBtn";
 import RestartInstanceBtn from "pages/instances/actions/RestartInstanceBtn";
+import MigrateInstanceBtn from "pages/instances/actions/MigrateInstanceBtn";
 import classnames from "classnames";
 import { List } from "@canonical/react-components";
+import { useSettings } from "context/useSettings";
+import { isClusteredServer } from "util/settings";
 
 interface Props {
   instance: LxdInstance;
@@ -13,16 +16,24 @@ interface Props {
 }
 
 const InstanceStateActions: FC<Props> = ({ instance, className }) => {
+  const { data: settings } = useSettings();
+  const isClustered = isClusteredServer(settings);
+  const items = [
+    <StartInstanceBtn key="start" instance={instance} />,
+    <RestartInstanceBtn key="restart" instance={instance} />,
+    <FreezeInstanceBtn key="freeze" instance={instance} />,
+    <StopInstanceBtn key="stop" instance={instance} />,
+  ];
+
+  if (isClustered) {
+    items.push(<MigrateInstanceBtn key="migrate" instance={instance} />)
+  }
+
   return (
     <List
       inline
       className={classnames(className, "actions-list")}
-      items={[
-        <StartInstanceBtn key="start" instance={instance} />,
-        <RestartInstanceBtn key="restart" instance={instance} />,
-        <FreezeInstanceBtn key="freeze" instance={instance} />,
-        <StopInstanceBtn key="stop" instance={instance} />,
-      ]}
+      items={items}
     />
   );
 };
diff --git a/src/pages/instances/actions/MigrateInstanceBtn.tsx b/src/pages/instances/actions/MigrateInstanceBtn.tsx
index 6add3f2..192e4a4 100644
--- a/src/pages/instances/actions/MigrateInstanceBtn.tsx
+++ b/src/pages/instances/actions/MigrateInstanceBtn.tsx
@@ -1,5 +1,5 @@
 import { FC } from "react";
-import { Button } from "@canonical/react-components";
+import { Button, Icon } from "@canonical/react-components";
 import MigrateInstanceForm from "pages/instances/MigrateInstanceForm";
 import usePortal from "react-useportal";
 import { migrateInstance } from "api/instances";
@@ -12,18 +12,10 @@ import ItemName from "components/ItemName";
 import { useToastNotification } from "context/toastNotificationProvider";
 
 interface Props {
-  instance: string;
-  location: string;
-  project: string;
-  onFinish: (newLocation: string) => void;
+  instance: LxdInstance;
 }
 
-const MigrateInstanceBtn: FC<Props> = ({
-  instance,
-  location,
-  project,
-  onFinish,
-}) => {
+const MigrateInstanceBtn: FC<Props> = ({ instance }) => {
   const eventQueue = useEventQueue();
   const toastNotify = useToastNotification();
   const { openPortal, closePortal, isOpen, Portal } = usePortal();
@@ -42,17 +34,16 @@ const MigrateInstanceBtn: FC<Props> = ({
     toastNotify.success(
       <>
         Migration finished for instance{" "}
-        <ItemName item={{ name: instance }} bold />
+        <ItemName item={{ name: instance.name }} bold />
       </>,
     );
-    onFinish(newTarget);
     void queryClient.invalidateQueries({
       queryKey: [queryKeys.instances, instance],
     });
   };
 
   const notifyFailure = (e: unknown) => {
-    toastNotify.failure(`Migration failed on instance ${instance}`, e);
+    toastNotify.failure(`Migration failed on instance ${instance.name}`, e);
   };
 
   const handleFailure = (msg: string) => {
@@ -63,14 +54,14 @@ const MigrateInstanceBtn: FC<Props> = ({
   };
 
   const handleMigrate = (target: string) => {
-    migrateInstance(instance, project, target)
+    migrateInstance(instance, target)
       .then((operation) => {
         eventQueue.set(
           operation.metadata.id,
           () => handleSuccess(target),
           handleFailure,
         );
-        toastNotify.info(`Migration started for instance ${instance}`);
+        toastNotify.info(`Migration started for instance ${instance.name}`);
         closePortal();
       })
       .catch((e) => {
@@ -87,13 +78,17 @@ const MigrateInstanceBtn: FC<Props> = ({
             close={closePortal}
             migrate={handleMigrate}
             instance={instance}
-            location={location}
             members={members}
           />
         </Portal>
       )}
-      <Button className="instance-migrate" onClick={openPortal} type="button">
-        Migrate
+      <Button
+        appearance="base"
+        loading={isLoading}
+        className="has-icon is-dense"
+        onClick={openPortal}
+      >
+        <Icon name="connected" />
       </Button>
     </>
   );
diff --git a/src/pages/instances/forms/EditInstanceDetails.tsx b/src/pages/instances/forms/EditInstanceDetails.tsx
index 8f28ec8..44b09f2 100644
--- a/src/pages/instances/forms/EditInstanceDetails.tsx
+++ b/src/pages/instances/forms/EditInstanceDetails.tsx
@@ -4,7 +4,6 @@ import ProfileSelect from "pages/profiles/ProfileSelector";
 import { FormikProps } from "formik/dist/types";
 import { EditInstanceFormValues } from "pages/instances/EditInstance";
 import { useSettings } from "context/useSettings";
-import MigrateInstanceBtn from "pages/instances/actions/MigrateInstanceBtn";
 import { isClusteredServer } from "util/settings";
 import AutoExpandingTextArea from "components/AutoExpandingTextArea";
 import ScrollableForm from "components/ScrollableForm";
@@ -72,18 +71,6 @@ const EditInstanceDetails: FC<Props> = ({ formik, project }) => {
               disabled={true}
             />
           </Col>
-          {!readOnly && (
-            <Col size={4}>
-              <MigrateInstanceBtn
-                instance={formik.values.name}
-                location={formik.values.location}
-                project={project}
-                onFinish={(newLocation: string) =>
-                  void formik.setFieldValue("location", newLocation)
-                }
-              />
-            </Col>
-          )}
         </Row>
       )}
       <ProfileSelect
diff --git a/src/util/instanceTable.tsx b/src/util/instanceTable.tsx
index 9e2050d..f7b3db1 100644
--- a/src/util/instanceTable.tsx
+++ b/src/util/instanceTable.tsx
@@ -17,7 +17,7 @@ export const COLUMN_WIDTHS: Record<string, number> = {
   [IPV6]: 330,
   [SNAPSHOTS]: 110,
   [STATUS]: 160,
-  [ACTIONS]: 210,
+  [ACTIONS]: 240,
 };
 
 export const SIZE_HIDEABLE_COLUMNS = [
-- 
2.34.1

